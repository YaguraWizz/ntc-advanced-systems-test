@echo off
rem build.bat - automates conan install (Debug+Release), cmake configure and build
rem Usage: build.bat [Debug|Release]
setlocal

rem go to script folder (project root)
pushd "%~dp0"

rem default config
set "CONFIG=Debug"
if not "%~1"=="" set "CONFIG=%~1"

rem validate config
if /I "%CONFIG%" NEQ "Debug" if /I "%CONFIG%" NEQ "Release" (
  echo Invalid configuration "%CONFIG%". Use Debug or Release.
  pause
  popd
  exit /b 1
)

echo =====================================================
echo Building project in "%CD%" with configuration: %CONFIG%
echo =====================================================

rem remove build folder if exists
if exist "build" (
  echo Removing existing build folder...
  rmdir /s /q "build"
)

rem Conan install for Debug
echo.
echo [1/4] Conan install (Debug)...
call conan install . --profile=task2_http_profile --build=missing -s build_type=Debug
if errorlevel 1 goto :err

rem Conan install for Release
echo.
echo [2/4] Conan install (Release)...
call conan install . --profile=task2_http_profile --build=missing -s build_type=Release
if errorlevel 1 goto :err

rem CMake configure using preset generated by Conan
echo.
echo [3/4] CMake configure (preset conan-default)...
call cmake --preset conan-default
if errorlevel 1 goto :err

cd build

rem Build requested configuration
echo.
echo [4/4] Build configuration: %CONFIG%...
call cmake --build . --config %CONFIG%
if errorlevel 1 goto :err

echo.
echo Build finished successfully for %CONFIG%.
popd
exit /b 0

:err
echo.
echo ERROR: last command failed with errorlevel %ERRORLEVEL%.
pause
popd
exit /b %ERRORLEVEL%